{"version":3,"sources":["components/Map.js","key.js","App.js","index.js"],"names":["ContainerSearch","styled","div","Form","form","Input","input","Button","button","withScriptjs","withGoogleMap","props","useState","lat","lng","InitialCoordinates","setInitialCoordinates","latitude","longitude","dataCoordinates","setDataCoordinate","handleInputChange","e","target","name","value","onSubmit","preventDefault","console","log","parseFloat","type","placeholder","onChange","defaultZoom","defaultCenter","position","App","mapURl","key","googleMapURL","loadingElement","containerElement","style","height","mapElement","ReactDOM","render","Fragment","document","getElementById"],"mappings":"4PA+EMA,EAAkBC,IAAOC,IAAV,0MAYfC,EAAOF,IAAOG,KAAV,wJAUJC,EAAQJ,IAAOK,MAAV,uGAQLC,EAASN,IAAOO,OAAV,oJASIC,yBACdC,yBA7GU,SAACC,GAAW,IAAD,EAC+BC,mBAChD,CACIC,KAAM,UACNC,KAAM,YAJO,mBACdC,EADc,KACMC,EADN,OAMyBJ,mBAAS,CACrDK,SAAW,GACXC,UAAY,KARO,mBAMbC,EANa,KAMIC,EANJ,KAYfC,EAAoB,SAACC,GAEzBF,EAAkB,2BACXD,GADU,kBAEZG,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,UAsBjC,OACE,qCACA,cAACzB,EAAD,UACE,eAACG,EAAD,CAAMuB,SApBW,SAACJ,GAAO,IAAD,EAC5BA,EAAEK,iBACFC,QAAQC,IAAI,oBAAsBC,WAAWX,EAAgBF,UAAa,IAAMa,WAAWX,EAAgBD,YAE3GF,EAAsB,2BACjBD,GADgB,uBAEhBA,EAAmBF,IAAMiB,WAAWX,EAAgBF,UAAUQ,OAF9C,cAGhBV,EAAmBD,IAAKgB,WAAWX,EAAgBD,WAAWO,OAH9C,MAgBjB,UAGC,cAACpB,EAAD,CAAO0B,KAAK,OAAOC,YAAY,UAAWC,SAAUZ,EAAmBG,KAAK,aAC5E,cAACnB,EAAD,CAAO0B,KAAK,OAAOC,YAAY,WAAWC,SAAUZ,EAAmBG,KAAK,cAC5E,cAACjB,EAAD,CAAQwB,KAAK,SAAb,yBAMH,cAAC,YAAD,CACAG,YAAa,GACbC,cAAepB,EAFf,SAIA,cAAC,SAAD,CACEqB,SAAU,CAAEvB,IAAKiB,WAAWX,EAAgBF,UAAWH,IAAIgB,WAAWX,EAAgBD,uBClE7E,EACD,0CCoCCmB,EA/BH,SAAC1B,GACX,IACM2B,EAAM,sDADGC,EACH,8CAeZ,OACC,mCAEA,cAAC,EAAD,CACAC,aAAcF,EACdG,eAAgB,4CAChBC,iBAAkB,qBAAKC,MAAO,CAAEC,OAAO,WACvCC,WAAY,qBAAKF,MAAO,CAAEC,OAAO,eCzBpCE,IAASC,OACP,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.081fc83d.chunk.js","sourcesContent":["import React, {useState}from 'react';\nimport styled from 'styled-components';\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\n\n\nconst Map = (props) => {\n  const [InitialCoordinates, setInitialCoordinates] = useState(\n      {\n          lat: -33.436884, \n          lng: -70.634395 \n      })\n  const [ dataCoordinates, setDataCoordinate] = useState({\n    latitude : '',\n    longitude : ''\n  })\n\n\n  const handleInputChange = (e) => {\n    \n    setDataCoordinate({\n        ...dataCoordinates,\n        [e.target.name] : e.target.value\n        \n    })\n    // console.log(typeof(\"tipo\", e.target.value))\n}\nconst getCoordinates = (e) => {\n  e.preventDefault()\n  console.log('enviando datos...' + parseFloat(dataCoordinates.latitude)  + ' ' + parseFloat(dataCoordinates.longitude)\n  )\n  setInitialCoordinates({\n    ...InitialCoordinates,\n      [InitialCoordinates.lat]: parseFloat(dataCoordinates.latitude).value,\n      [InitialCoordinates.lng]:parseFloat(dataCoordinates.longitude).value\n    \n  }\n  )\n };\n \n// const latNumber = parseFloat(dataCoordinates.latitude) \n// const lngNumber = parseFloat(dataCoordinates.longitude) \n// console.log(typeof('nuevas const',latNumber, lngNumber));\n// console.log(latNumber, lngNumber);\n  return (\n    <>\n    <ContainerSearch>\n      <Form onSubmit={getCoordinates}>\n        \n     \n       <Input type=\"text\" placeholder=\"Latitud\"  onChange={handleInputChange} name=\"latitude\"/>\n       <Input type=\"text\" placeholder=\"Longitud\" onChange={handleInputChange} name=\"longitude\"/>\n       <Button type=\"submit\">Buscar</Button>\n       </Form>\n      {/* <p>{dataCoordinates.latitude}</p>\n      <p>{dataCoordinates.longitude}</p> */}\n    </ContainerSearch>\n   \n    <GoogleMap\n    defaultZoom={15}\n    defaultCenter={InitialCoordinates}\n  >\n    <Marker\n      position={{ lat: parseFloat(dataCoordinates.latitude), lng:parseFloat(dataCoordinates.longitude)\n          }}/>\n    {/* <Marker\n      position={{ lat: -33.436884, lng: -70.634395 }}\n    /> */}\n  </GoogleMap>\n    </>\n  );\n\n\n\n}\nconst ContainerSearch = styled.div`\nwidth:100vw;\nheight:20vh;\ndisplay:flex;\nflex-direction: row;\njustify-content:center;\nalign-items: center;\nalign-content:center;\nposition:fixed;\ntop:2vh;\nz-index:3;\n`\nconst Form = styled.form`\nwidth:50vw;\nheight:40px;\ndisplay:flex;\njustify-content:center;\nflex-wrap:nowrap;\nalign-content:center;\npadding: 5px;\n`\n\nconst Input = styled.input`\nwidth:150px;\nheight:30px;\npadding: 10px;\nfont-size:2rem;\nmargin:10px;\n`\n\nconst Button = styled.button`\nwidth:200px;\nheight:50px;\nmargin-top:10px;\npadding: 10px;\nbackground-color:var(--dark-blue);\ncolor: var(--white);\n`\n\nexport default  withScriptjs (\n  withGoogleMap(\n Map\n  )\n) ;\n\n\n\n\n\n","// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  mapKeyApi : 'AIzaSyCGIRHlHQX_miCOxHGMs0I9G4gydRT3Eek'\n}","import React from 'react';\nimport Map from './components/Map'\nimport key from './key.js';\n\n\n//AIzaSyCGIRHlHQX_miCOxHGMs0I9G4gydRT3Eek\n\nconst App = (props) => {\n  const apiKey = key.mapKeyApi\n  const mapURl = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&v=3.exp&libraries=geometry,drawing,places`;\n\n\n  \n\n\n  // useEffect(() => {\n\n  //   return () => {\n  //     setInitialCoordinates(InitialCoordinates)\n      \n  //   }\n  // },[])\n\n\n  return (\n   <>\n\n   <Map \n   googleMapURL={mapURl}\n   loadingElement={<p>Cargando...</p>}\n   containerElement={<div style={{ height: `100vh` }} />}\n   mapElement={<div style={{ height: `100%` }} />} \n    \n    />\n   </>\n  );\n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}